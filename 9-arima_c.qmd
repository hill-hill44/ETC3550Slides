---
title: "ETC3550/ETC5550 Applied&nbsp;forecasting"
author: "Ch9. ARIMA models"
institute: "OTexts.org/fpp3/"
pdf-engine: pdflatex
fig-width: 7.5
fig-height: 3.5
format:
  beamer:
    theme: monash
    aspectratio: 169
    fontsize: 14pt
    section-titles: false
include-in-header: header.tex
execute:
  echo: false
  message: false
  warning: false
---


```{r setup, include=FALSE}
source("setup.R")
library(patchwork)
library(purrr)
```



## Seasonal ARIMA models

| ARIMA | $~\underbrace{(p, d, q)}$ | $\underbrace{(P, D, Q)_{m}}$ |
| ----: | :-----------------------: | :--------------------------: |
|       | ${\uparrow}$              | ${\uparrow}$                 |
|       | Non-seasonal part         | Seasonal part of             |
|       | of the model              | of the model                 |

where $m =$ number of observations per year.

## Seasonal ARIMA models

E.g., ARIMA$(1, 1, 1)(1, 1, 1)_{4}$ model (without constant)\pause
$$(1 - \phi_{1}B)(1 - \Phi_{1}B^{4}) (1 - B) (1 - B^{4})y_{t} ~= ~
(1 + \theta_{1}B) (1 + \Theta_{1}B^{4})\varepsilon_{t}.
$$\pause

\setlength{\unitlength}{1mm}
\begin{footnotesize}
\begin{picture}(100,25)(-5,0)
\thinlines
{\put(5,22){\vector(0,1){6}}}
{\put(22,10){\vector(0,1){18}}}
{\put(38,22){\vector(0,1){6}}}
{\put(52,10){\vector(0,1){18}}}
{\put(77,22){\vector(0,1){6}}}
{\put(95,10){\vector(0,1){18}}}
{\put(-10,17){$\left(\begin{array}{@{}c@{}} \text{Non-seasonal} \\ \text{AR(1)}
                    \end{array}\right)$}}
{\put(12,5){$\left(\begin{array}{@{}c@{}} \text{Seasonal} \\ \text{AR(1)}
                    \end{array}\right)$}}
{\put(25,17){$\left(\begin{array}{@{}c@{}} \text{Non-seasonal} \\ \text{difference}
                    \end{array}\right)$}}
{\put(40,5){$\left(\begin{array}{@{}c@{}} \text{Seasonal} \\ \text{difference}
                    \end{array}\right)$}}
{\put(65,17){$\left(\begin{array}{@{}c@{}} \text{Non-seasonal} \\ \text{MA(1)}
                    \end{array}\right)$}}
{\put(85,5){$\left(\begin{array}{@{}c@{}} \text{Seasonal} \\ \text{MA(1)}
                    \end{array}\right)$}}
\end{picture}
\end{footnotesize}

\vspace*{10cm}

## Seasonal ARIMA models

E.g., ARIMA$(1, 1, 1)(1, 1, 1)_{4}$ model (without constant)
$$(1 - \phi_{1}B)(1 - \Phi_{1}B^{4}) (1 - B) (1 - B^{4})y_{t} ~= ~
(1 + \theta_{1}B) (1 + \Theta_{1}B^{4})\varepsilon_{t}.
$$

All the factors can be multiplied out and the general model
written as follows:
\begin{align*}
y_{t} &= (1 + \phi_{1})y_{t - 1} - \phi_1y_{t-2} + (1 + \Phi_{1})y_{t - 4}\\
&\text{}
 - (1 + \phi_{1} + \Phi_{1} + \phi_{1}\Phi_{1})y_{t - 5}
 + (\phi_{1} + \phi_{1} \Phi_{1}) y_{t - 6} \\
& \text{} - \Phi_{1} y_{t - 8} + (\Phi_{1} + \phi_{1} \Phi_{1}) y_{t - 9}
  - \phi_{1} \Phi_{1} y_{t - 10}\\
  &\text{}
  + \varepsilon_{t} + \theta_{1}\varepsilon_{t - 1} + \Theta_{1}\varepsilon_{t - 4} + \theta_{1}\Theta_{1}\varepsilon_{t - 5}.
\end{align*}
\vspace*{10cm}

## Common ARIMA models

The US Census Bureau uses the following models most often:\vspace*{0.5cm}

\begin{tabular}{|ll|}
\hline
ARIMA(0,1,1)(0,1,1)$_m$& with log transformation\\
ARIMA(0,1,2)(0,1,1)$_m$& with log transformation\\
ARIMA(2,1,0)(0,1,1)$_m$& with log transformation\\
ARIMA(0,2,2)(0,1,1)$_m$& with log transformation\\
ARIMA(2,1,2)(0,1,1)$_m$& with no transformation\\
\hline
\end{tabular}

## Seasonal ARIMA models
The seasonal part of an AR or MA model will be seen in the seasonal lags of
the PACF and ACF.

\alert{ARIMA(0,0,0)(0,0,1)$_{12}$ will show:}

  * a spike at lag 12 in the ACF but no other significant spikes.
  * The PACF will show exponential decay in the seasonal lags; that is, at lags 12, 24, 36, \dots.

\alert{ARIMA(0,0,0)(1,0,0)$_{12}$ will show:}

  * exponential decay in the seasonal lags of the ACF
  * a single significant spike at lag 12 in the PACF.

## US leisure employment

```{r, fig.height=2.45}
leisure <- us_employment |>
  filter(Title == "Leisure and Hospitality", year(Month) > 2000) |>
  mutate(Employed = Employed / 1000) |>
  select(Month, Employed)
autoplot(leisure, Employed) +
  labs(title = "US employment: leisure & hospitality", y = "People (millions)")
```

## US leisure employment

```{r, fig.height=3}
leisure |>
  gg_tsdisplay(difference(Employed, 12), plot_type = "partial", lag = 36) +
  labs(title = "Seasonally differenced", y = "")
```

## US leisure employment

```{r, fig.height=2.8}
leisure |>
  gg_tsdisplay(difference(Employed, 12) |> difference(),
    plot_type = "partial", lag = 36
  ) +
  labs(title = "Double differenced", y = "")
```

## US leisure employment
\fontsize{10}{11}\sf

```{r}
fit <- leisure |>
  model(
    arima012011 = ARIMA(Employed ~ pdq(0, 1, 2) + PDQ(0, 1, 1)),
    arima210011 = ARIMA(Employed ~ pdq(2, 1, 0) + PDQ(0, 1, 1)),
    auto = ARIMA(Employed, stepwise = FALSE, approx = FALSE)
  )
fit |> pivot_longer(everything(),
  names_to = "Model name",
  values_to = "Orders"
)
```

## US leisure employment
\fontsize{10}{11}\sf

```{r}
glance(fit) |>
  arrange(AICc) |>
  select(.model:BIC)
```

## US leisure employment

```{r, fig.height=4}
fit |>
  select(auto) |>
  gg_tsresiduals(lag = 36)
```

## US leisure employment
\fontsize{10}{11}\sf

```{r}
augment(fit) |> features(.innov, ljung_box, lag = 24, dof = 4)
```

## US leisure employment

```{r}
forecast(fit, h = 36) |>
  filter(.model == "auto") |>
  autoplot(leisure) +
  labs(title = "US employment: leisure and hospitality", y = "Number of people (millions)")
```

## Cortecosteroid drug sales

```{r}
h02 <- PBS |>
  filter(ATC2 == "H02") |>
  summarise(Cost = sum(Cost) / 1e6)
```

## Cortecosteroid drug sales

```{r}
h02 |> autoplot(
  Cost
)
```

## Cortecosteroid drug sales

```{r}
h02 |> autoplot(
  log(Cost)
)
```

## Cortecosteroid drug sales

```{r}
h02 |> autoplot(
  log(Cost) |> difference(12)
)
```

## Cortecosteroid drug sales

```{r h02b, fig.height=3.2}
h02 |> gg_tsdisplay(difference(log(Cost), 12),
  lag_max = 36, plot_type = "partial"
)
```

## Cortecosteroid drug sales

  * Choose $D=1$ and $d=0$.
  * Spikes in PACF at lags 12 and 24 suggest seasonal AR(2) term.
  * Spikes in PACF suggests possible non-seasonal AR(3) term.
  * Initial candidate model: ARIMA(3,0,0)(2,1,0)$_{12}$.

## Cortecosteroid drug sales

```{r h02aicc, echo=FALSE}
models <- list(
  c(3, 0, 0, 2, 1, 0),
  c(3, 0, 1, 2, 1, 0),
  c(3, 0, 2, 2, 1, 0),
  c(3, 0, 1, 1, 1, 0),
  c(3, 0, 1, 0, 1, 1),
  c(3, 0, 1, 0, 1, 2),
  c(3, 0, 1, 1, 1, 1)
)
model_defs <- map(models, ~ ARIMA(log(Cost) ~ 0 + pdq(!!.[1], !!.[2], !!.[3]) + PDQ(!!.[4], !!.[5], !!.[6])))
model_defs <- set_names(model_defs, map_chr(
  models,
  ~ sprintf("ARIMA(%i,%i,%i)(%i,%i,%i)[12]", .[1], .[2], .[3], .[4], .[5], .[6])
))

fit <- h02 |>
  model(!!!model_defs)

fit |>
  glance() |>
  arrange(AICc) |>
  select(.model, AICc) |>
  knitr::kable(digits = 2, row.names = FALSE, align = "cc", booktabs = TRUE)
```

## Cortecosteroid drug sales
\fontsize{10}{12}\sf

```{r arimah02, echo=TRUE}
fit <- h02 |>
  model(best = ARIMA(log(Cost) ~ 0 + pdq(3, 0, 1) + PDQ(0, 1, 2)))
report(fit)
```

## Cortecosteroid drug sales

```{r h02res, echo=TRUE, fig.height=4, dependson='arimah02'}
gg_tsresiduals(fit)
```

## Cortecosteroid drug sales
\fontsize{10}{13}\sf

```{r h02resb, echo = TRUE, fig.height=4, dependson='arimah02'}
augment(fit) |>
  features(.innov, ljung_box, lag = 36, dof = 6)
```

## Cortecosteroid drug sales
\fontsize{10}{13}\sf

```{r h02auto, echo=TRUE, fig.height=3.6}
fit <- h02 |> model(auto = ARIMA(log(Cost)))
report(fit)
```

## Cortecosteroid drug sales

```{r, echo=TRUE, fig.height=4, dependson='h02auto'}
gg_tsresiduals(fit)
```

## Cortecosteroid drug sales
\fontsize{10}{13}\sf

```{r, echo = TRUE, dependson='h02auto'}
augment(fit) |>
  features(.innov, ljung_box, lag = 36, dof = 3)
```

## Cortecosteroid drug sales
\fontsize{10}{10}\sf

```{r h02tryharder, echo=TRUE, fig.height=3.6}
fit <- h02 |>
  model(best = ARIMA(log(Cost),
    stepwise = FALSE,
    approximation = FALSE,
    order_constraint = p + q + P + Q <= 9
  ))
report(fit)
```

## Cortecosteroid drug sales

```{r, echo=TRUE, fig.height=4, dependson='h02tryharder'}
gg_tsresiduals(fit)
```

## Cortecosteroid drug sales
\fontsize{10}{12}\sf

```{r, echo = TRUE, dependson='h02tryharder'}
augment(fit) |>
  features(.innov, ljung_box, lag = 36, dof = 9)
```

## Cortecosteroid drug sales
\fontsize{10}{12}\sf

Training data: July 1991 to June 2006

Test data: July 2006--June 2008

```r
fit <- h02 |>
  filter_index(~ "2006 Jun") |>
  model(
    ARIMA(log(Cost) ~ 0 + pdq(3, 0, 0) + PDQ(2, 1, 0)),
    ARIMA(log(Cost) ~ 0 + pdq(3, 0, 1) + PDQ(2, 1, 0)),
    ARIMA(log(Cost) ~ 0 + pdq(3, 0, 2) + PDQ(2, 1, 0)),
    ARIMA(log(Cost) ~ 0 + pdq(3, 0, 1) + PDQ(1, 1, 0))
    # ... #
  )

fit |>
  forecast(h = "2 years") |>
  accuracy(h02)
```

## Cortecosteroid drug sales
\fontsize{13}{15}\sf

```{r h02-rmse, cache=TRUE, echo=FALSE}
models <- list(
  c(3, 0, 1, 0, 1, 2),
  c(3, 0, 1, 1, 1, 1),
  c(3, 0, 1, 0, 1, 1),
  c(3, 0, 1, 2, 1, 0),
  c(3, 0, 0, 2, 1, 0),
  c(3, 0, 2, 2, 1, 0),
  c(3, 0, 1, 1, 1, 0),
  c(2, 1, 0, 0, 1, 1),
  c(4, 1, 1, 2, 1, 2)
)

model_defs <- map(models, ~ ARIMA(log(Cost) ~ 0 + pdq(!!.[1], !!.[2], !!.[3]) + PDQ(!!.[4], !!.[5], !!.[6])))
model_defs <- set_names(model_defs, map_chr(
  models,
  ~ sprintf("ARIMA(%i,%i,%i)(%i,%i,%i)[12]", .[1], .[2], .[3], .[4], .[5], .[6])
))

fit <- h02 |>
  filter_index(~"2006 Jun") |>
  model(!!!model_defs)

fit |>
  forecast(h = "2 years") |>
  accuracy(h02) |>
  arrange(RMSE) |>
  select(.model, RMSE) |>
  knitr::kable(digits = 4)
```

## Cortecosteroid drug sales

  * Models with lowest AICc values tend to give slightly better results than the other models.
  * AICc comparisons must have the same orders of differencing. But RMSE test set comparisons can involve any models.
  * Use the best model available, even if it does not pass all tests.

## Cortecosteroid drug sales

```{r h02f, echo=TRUE}
fit <- h02 |>
  model(ARIMA(Cost ~ 0 + pdq(3, 0, 1) + PDQ(0, 1, 2)))
fit |>
  forecast() |>
  autoplot(h02) +
  labs(y = "H02 Expenditure ($AUD)")
```

# ARIMA vs ETS

## ARIMA vs ETS
\fontsize{14}{16}\sf

  * Myth that ARIMA models are more general than exponential smoothing.
  * Linear exponential smoothing models all special cases of ARIMA models.
  * Non-linear exponential smoothing models have no equivalent ARIMA counterparts.
  * Many ARIMA models have no exponential smoothing counterparts.
  * ETS models all non-stationary. Models with seasonality or non-damped trend (or both) have two unit roots; all other models have one unit \rlap{root.}

\vspace*{10cm}

## ARIMA vs ETS

```{r venn, echo=FALSE}
library(latex2exp)
cols <- c(ets = "#D55E00", arima = "#0072b2")
tibble(
  x = c(-1, 1),
  y = c(-0.5, -0.5),
  labels = c("ets", "arima"),
) |>
  ggplot(aes(colour = labels, fill = labels)) +
  ggforce::geom_circle(aes(x0 = x, y0 = y, r = 1.6), alpha = 0.3, size = 1) +
  scale_colour_manual(values = cols) +
  scale_fill_manual(values = cols) +
  coord_fixed() +
  guides(fill = "none") +
  geom_text(aes(label = "ETS models", x = -1.5, y = 1.35), col = cols["ets"], fontface = "bold", size = 6) +
  geom_text(aes(label = "Combination\n of components", x = -1.3, y = 0.5), col = cols["ets"], size = 2.8, fontface = "bold") +
  geom_text(aes(label = "9 ETS models with\n multiplicative errors", x = -1.6, y = -0.5), col = cols["ets"], size = 2.8) +
  geom_text(aes(label = "3 ETS models with\n additive errors and\n multiplicative\n seasonality", x = -1.3, y = -1.4), col = cols["ets"], size = 2.8) +
  geom_text(aes(label = "ARIMA models", x = 1.5, y = 1.35), col = cols["arima"], fontface = "bold", size = 6) +
  geom_text(aes(label = "Modelling\n autocorrelations", x = 1.3, y = 0.5), col = cols["arima"], size = 2.8, fontface = "bold") +
  annotate("text", label = TeX("Potentially $\\infty$ models"), x = 1.6, y = -0.6, col = cols["arima"], size = 2.8) +
  geom_text(aes(label = "All stationary models\n Many large models", x = 1.25, y = -1.5), col = cols["arima"], size = 2.8) +
  geom_text(aes(label = "6 fully additive\n ETS models", x = 0, y = -0.6), col = "#6b6859", size = 2.8) +
  guides(colour = "none", fill = "none") +
  theme_void()
```

## Equivalences

\fontsize{13}{15}\sf

|**ETS model**  | **ARIMA model**             | **Parameters**                       |
| :------------ | :-------------------------- | :----------------------------------- |
| ETS(A,N,N)    | ARIMA(0,1,1)                | $\theta_1 = \alpha-1$                |
| ETS(A,A,N)    | ARIMA(0,2,2)                | $\theta_1 = \alpha+\beta-2$          |
|               |                             | $\theta_2 = 1-\alpha$                |
| ETS(A,A\damped,N)    | ARIMA(1,1,2)                | $\phi_1=\phi$                        |
|               |                             | $\theta_1 = \alpha+\phi\beta-1-\phi$ |
|               |                             | $\theta_2 = (1-\alpha)\phi$          |
| ETS(A,N,A)    | ARIMA(0,0,$m$)(0,1,0)$_m$   |                                      |
| ETS(A,A,A)    | ARIMA(0,1,$m+1$)(0,1,0)$_m$ |                                      |
| ETS(A,A\damped,A)    | ARIMA(1,0,$m+1$)(0,1,0)$_m$ |                                      |

## Example: Australian population
\fontsize{10}{11}\sf

```{r tscvpop, echo=TRUE, warning=FALSE}
aus_economy <- global_economy |>
  filter(Code == "AUS") |>
  mutate(Population = Population / 1e6)
aus_economy |>
  slice(-n()) |>
  stretch_tsibble(.init = 10) |>
  model(
    ets = ETS(Population),
    arima = ARIMA(Population)
  ) |>
  forecast(h = 1) |>
  accuracy(aus_economy) |>
  select(.model, ME:RMSSE)
```

## Example: Australian population

```{r popetsplot, echo=TRUE, fig.height=2.6}
aus_economy |>
  model(ETS(Population)) |>
  forecast(h = "5 years") |>
  autoplot(aus_economy) +
  labs(title = "Australian population", y = "People (millions)")
```

## Example: Cement production

```{r qcement1, echo=TRUE}
cement <- aus_production |>
  select(Cement) |>
  filter_index("1988 Q1" ~ .)
train <- cement |> filter_index(. ~ "2007 Q4")
fit <- train |>
  model(
    arima = ARIMA(Cement),
    ets = ETS(Cement)
  )
```

## Example: Cement production
\fontsize{10}{11}\sf

```{r qcement2, dependson="qcement1"}
fit |>
  select(arima) |>
  report()
```

## Example: Cement production
\fontsize{10}{10}\sf

```{r qcement3, dependson="qcement1"}
fit |>
  select(ets) |>
  report()
```

## Example: Cement production

```{r qcement4, dependson="qcement1", fig.height=4}
gg_tsresiduals(fit |> select(arima), lag_max = 16)
```

## Example: Cement production

```{r qcement5, dependson="qcement1", fig.height=4}
gg_tsresiduals(fit |> select(ets), lag_max = 16)
```

## Example: Cement production
\fontsize{10}{12}\sf

```{r qcement6, dependson="qcement1"}
fit |>
  select(arima) |>
  augment() |>
  features(.innov, ljung_box, lag = 16, dof = 6)
```

## Example: Cement production
\fontsize{10}{12}\sf

```{r qcement7, dependson="qcement1"}
fit |>
  select(ets) |>
  augment() |>
  features(.innov, ljung_box, lag = 16, dof = 6)
```

## Example: Cement production
\fontsize{10}{12}\sf

```{r qcement8, dependson=c("qcement2","qcement3")}
fit |>
  forecast(h = "2 years 6 months") |>
  accuracy(cement) |>
  select(-ME, -MPE, -ACF1)
```

## Example: Cement production

```{r qcement9, echo=TRUE, dependson="qcement1", fig.height=2.6}
fit |>
  select(arima) |>
  forecast(h = "3 years") |>
  autoplot(cement) +
  labs(title = "Cement production in Australia", y = "Tonnes ('000)")
```
